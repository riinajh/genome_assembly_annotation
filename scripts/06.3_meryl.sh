#!/usr/bin/env bash

#SBATCH --partition=pibu_el8
#SBATCH --job-name=meryl
#SBATCH --time=1-00:00:00
#SBATCH --mem=64G
#SBATCH --cpus-per-task=16
#SBATCH --output=/data/users/jriina/genome_assembly/logfiles/06.3_meryl_%j.o
#SBATCH --error=/data/users/jriina/genome_assembly/logfiles/06.3_meryl_%j.e

# load modules


# set variables
WORKDIR=/data/users/jriina/genome_assembly
RAW_DATA=/data/users/jriina/genome_assembly/processed_reads/dna.fastq.gz
ASSEMBLY_HIFIASM=/data/users/jriina/genome_assembly/hifiasm_assembly/assembly.fa
ASSEMBLY_LJA=/data/users/jriina/genome_assembly/lja_assembly/assembly.fasta
ASSEMBLY_FLYE=/data/users/jriina/genome_assembly/flye_assembly/assembly.fasta
OUT_DIR=/data/users/jriina/genome_assembly/merqury
CONTAINER_SIF_MERQURY=/containers/apptainer/merqury_1.3.sif


# create directory if not available
mkdir -p $OUT_DIR $OUT_DIR/hifiasm $OUT_DIR/flye $OUT_DIR/lja

# add MERQURY as a path variable in the script
export MERQURY="/usr/local/share/merqury"

# prepare meryl dbs
# get the right k size
# how i solved this:
#apptainer exec\
# --bind $WORKDIR
#  /containers/apptainer/merqury_1.3.sif\
#  sh $MERQURY/best_k.sh 140000000 
# output: tolerable collision rate: 0.001 \\ 18.5126
# so will pick k=19 for the rest
k=19

# build k-mer dbs with meryl
# count: count the occurrences of canonical kmers in the input.  must have 'output' specified
# k=<K>: create mers of size K bases (mandatory)
# output O: write kmers generated by the present command to an output meryl database. O mandatory for count operations.
apptainer exec --bind $WORKDIR /containers/apptainer/meryl_1.4.1.sif meryl count k=$k $RAW_DATA output $OUT_DIR/merylout.meryl
